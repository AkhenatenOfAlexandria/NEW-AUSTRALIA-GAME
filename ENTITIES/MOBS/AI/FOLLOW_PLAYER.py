from WORLD.LOCATION_ID import LOCATION_ID
from LOGIC.MATH import VECTOR_DIRECTION, RELATIVE_LOCATION
from WORLD.GLOBAL_LISTS import MOBS


def DIRECTION(PLAYER, MOB):
    if PLAYER.POSITION == MOB.POSITION:
        return None
    else:
        PLAYER_X, PLAYER_Y = PLAYER.POSITION[0:2]
        MOB_X, MOB_Y = MOB.POSITION[0:2]

        DX = PLAYER_X - MOB_X
        DY = PLAYER_Y - MOB_Y

        return VECTOR_DIRECTION(DX, DY)

def MOVE(PLAYER, MOB, _DIRECTION):
    MOB_LOCATION = LOCATION_ID(*MOB.POSITION[0:2])
    PLAYER_LOCATION = LOCATION_ID(*PLAYER.POSITION[0:2])
    if MOB_LOCATION == PLAYER_LOCATION:
        START_IN_ROOM = True
    else:
        START_IN_ROOM = False

    X_DISTANCE, Y_DISTANCE, X_DIRECTION, Y_DIRECTION = RELATIVE_LOCATION(*MOB.POSITION[0:2], *PLAYER.POSITION[0:2])

    if _DIRECTION in ["NORTH", "SOUTH"]:
        _DISTANCE = min(X_DISTANCE, MOB.SPEED)
    else:
        _DISTANCE = min(Y_DISTANCE, MOB.SPEED)
    
    NEW_POSITION = MOB.MOVE(_DIRECTION, _DISTANCE)
    if NEW_POSITION != MOB.POSITION[0:2]:
        MOB.POSITION[0:2] = NEW_POSITION
        if LOCATION_ID(*MOB.POSITION[0:2]) == LOCATION_ID(*PLAYER.POSITION[0:2]):
            if START_IN_ROOM:
                print(f"{MOB.NAME} moved {_DISTANCE*5} feet {_DIRECTION}.")
            else:
                CURRENT_LOCATION = LOCATION_ID(*NEW_POSITION)
                MOB_INDEX = MOBS.index(MOB)
                X_DISTANCE, Y_DISTANCE, X_DIRECTION, Y_DIRECTION = RELATIVE_LOCATION(*PLAYER.POSITION[0:2], *MOB.POSITION[0:2])
                print(f"{MOB.NAME} (ID: {MOB_INDEX}, HEALTH: {MOB.HEALTH}/{MOB.MAX_HEALTH}) entered the {CURRENT_LOCATION.DESCRIPTION}: {X_DISTANCE*5} feet {X_DIRECTION}, {Y_DISTANCE*5} feet {Y_DIRECTION}.")